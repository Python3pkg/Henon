{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Arial;}}
\viewkind4\uc1\pard\f0\fs20
\b\fs28 Hénon v1.2 readme\plain
\par
\par * {\strike General introduction}{\v General}
\par * {\strike The set variables screen}{\v Setvars}
\par * {\strike Animation}{\v Animation}
\par * {\strike About the demos}{\v Aboutdemos}
\par
${\footnote General}
\par #{\footnote General}--Section: General introduction
\par Note that this program may contain a few errors, which may corrupt the running program and possibly affect your running kernel or other programs. This is my first ever Visual C++ program.
\par
\par This program is for exploring the Hénon map, which is defined by:
\par
\par x[n+1] = {\i a} - x[n]^2 + {\i b} * y[n],
\par y[n+1] = x[n].
\par
\par A map is used for discontinuous time-dynamics; starting from initial conditions x[0], y[0], and parameters {\i a}, {\i b} the map tells you what the system (x, y) looks like for n = 1, 2... (n to n+1 stands for an increase of a large body of time, like a second or an hour).
\par
\par After start-up the program calculates a single orbit in the basin of the Hénon attractor and you get to see the resulting strange attractor of the Hénon map (with parameters {\i a} = 1.4, {\i b} = 0.3). The calculation stops when either a quarter of the amount of screenpixels has been set or when the maximum number of iterations has been reached.
\par
\par You can then do a few things:
\par - look at a portion of the screen by zooming in on it.
\par Select a section of screen and the calculation starts over again; points that 
end up in the selected portion are plotted. Press 'z' to zoom out again (well, more precisely, change to program startup axes settings). See Demo 2 in the Help menu for an illustration.
\par
\par The point is that you can zoom in on the Hénon attractor indefinitely and all the while the image remains similar. But unlike Mandelbrot fractals, the calculation time increases sharply with zoomfactor.
\par
\par - stop current calculation
\par To bail out of just about anything, press ESC.
\par 
\par - animate by varying {\i a} or {\i b}
\par See the Animation section and try Demos 1 and 3 in the Help menu.
\par
\par - try a more hands-on approach by setting variables yourself
\par See 'The set variables screen' section.
\par
\par - redraw the screen
\par If you adjust settings, the screen has to be redrawn to reflect the new settings. Zooming in or out triggers an automatic redraw. Toggle lines/dots for example does not. For this you press SPACE.
\par
\par - toggle lines/dots
\par By pressing l (for Line) you can toggle whether you want to just points or lines. In this way you can see the path of the orbit (that is, if you have also enabled seeing the whole orbit). The starting point is always (.1, .1), so you can work your way along the lines from there. Try demo 4.
\par
\par Note that when a previous orbit-point was outside the current visible area, the program will not draw a line from there but continue drawing lines from the first point that is again in the visible area.
\par
\par Drawing lines is disabled during animation.
\par
\par - toggle seeing whole orbit or not
\par The starting point for each calculation is most often not the same as the point or points where the starting point is attracted towards, so the starting point will have to travel a little before it can exemplify of its eventual orbit. You can toggle whether you want to see these first iterations. The shortcut-key is 'w'.
\par\page
${\footnote Setvars}
\par #{\footnote Setvars}--Section: The set variables screen
\par The {\i a}, {\i b} and coordinate fields are pretty straightforward. Note that you have to do a redraw when you’ve changed values. Some checking is done on the legality of these fields, so changes may not be applied.
\par
\par The maximum iterations field is a limit for the calculations to go on; calculations are stopped when either this value has been reached or 25% of the screenpixels have been drawn (10% in the case of lines).
\par
\par The Number of (#) first iterates to neglect is the number of iterates that are done before the program starts drawing the orbit; only does something when whole orbit toggle is off
\par
\par The #iterates each cycle field is something you can probably neglect. Basically the program does this amount of calculations, checks whether it has reached the requested number of iterates (and if not, calls itself again) and checks whether there is something else to do, like user input.
\par
\par See {\strike Animation}{\v Animation} section on the animation settings field.
\par\page
${\footnote Animation}
\par #{\footnote Animation}--Section: Animation
\par In the set variables screen you can set the increment; the amount you want {\i a} or {\i b} changed for each 'animation-frame'. And you can set the range: the animation then starts at variable - 0.5*range and ends at variable + 0.5*range. You can switch which variable to animate using the 's' key. The animation starts running on key 'a'.
\par
\par Using the 'c' key you can toggle whether you want to clean the screen after each frame or just draw on top of each other.
\par\page
${\footnote Aboutdemos}
\par #{\footnote Aboutdemos}--Section: About the demos
\par The settings for the demos are such that they run fluently on my own computer. It may run too fast or too slow on yours; for this you can adjust the maximum iterations field and/or the increment field.
\par
\par Demo 1 is an animation that will ultimately show the 'start-up'screen. It starts with a stable point that doubles its period, as a function of {\i b}, and then becomes the attractor. Demo 3 is basically the same idea, except we're varying {\i a} instead of {\i b}. It also shows a crisis; the sudden disappearance of the attractor at {\i a} =± 1.2.
\par
\par When the attractor has formed more or less, you may notice the attractor 'faltering' a bit; disappearing for a little while. These must be periodic windows; reappearance of periodic behaviour.
\par
\par Demo 3 was thought of due to some theoretical deliberations in the "Chaos of Chemistry" colloquium paper, Ch. 3, paragraph 2.
\par
\par Demo 4 shows how the lines option can be useful. The demo just shows the complete orbit from a starting point up until a period-2 point. It zooms in on the nice zigzag motion before the orbit becomes the periodic point.
\par
\par Note that the program does not return to your previous settings after completing a demo.
\page
}